
A demo of 1D+1T wavelet and inverse wavelet.

1D+1T waveletï¼š

```  
from pkucwt.wavelet import cwt1DT
from pkucwt.wavelet import icwt1DT

import numpy as np
import scipy
import matplotlib.pyplot as plt

tt = np.linspace(0,20,10)
xx = np.linspace(0,20,10)
dx = np.abs(np.mean(np.diff(xx)))
dt = np.abs(np.mean(np.diff(tt)))
[x, t] = np.meshgrid(xx, tt, indexing='ij')
signal_2D = np.cos(2 * np.pi/6 * x + 2 * np.pi / 6 * t)

fft_2D_out = scipy.fft.fftn(signal_2D, axes=(0,1))

freq_sample_spatial_x = 1.0/dx

freq_sample_spatial_t = 1.0/dt

lambda_arr = np.linspace(4,10,10) #wavelength
period_arr = np.linspace(4,10,10)  #period

c_vel_arr=np.array([1.0]) #velocity

output_1DT = cwt1DT(fft_2D_out,
                   freq_sample_spatial=freq_sample_spatial_x,
                   freq_sample_time=freq_sample_spatial_t,
                   lambda_arr=lambda_arr, period_arr=period_arr,
                   c_vel_arr=c_vel_arr, normalization='L2') 


``` 


1D+1T inverse wavelet:

``` 

x_arr = np.linspace(0,20,10)
t_arr = np.linspace(0,20,10)
bx_arr = np.copy(xx)
tau_arr = np.copy(tt)

singal_from_icwt = icwt1DT(output_1DT, x_arr, t_arr, bx_arr, tau_arr, lambda_arr, period_arr, c_vel_arr)

``` 
plot figures:

``` 
fig = plt.figure(figsize=(14,4))
plt.subplot(1,3,2)

pos_x_for_plot_index = 5
time_for_plot_index = 5
pos_x_for_plot = xx[pos_x_for_plot_index]
time_for_plot = tt[time_for_plot_index]
output=((np.abs(output_1DT[pos_x_for_plot_index,time_for_plot_index,:,:,0])))
plt.contourf(lambda_arr,period_arr,output.T,cmap='jet')
plt.xlabel(r'$wavelength \quad\lambda$')
plt.ylabel(r'period T')
plt.title('wavelet, x='+str(int(pos_x_for_plot))+', t='+str(int(time_for_plot)))

plt.subplot(1,3,1)
plt.contourf(bx_arr,tau_arr,signal_2D,cmap='jet')
plt.title('original signal')
plt.xlabel('x')
plt.ylabel('time')

plt.subplot(1,3,3)
plt.contourf(x_arr,t_arr,(singal_from_icwt),cmap='jet')
plt.title('signal from 1D+1T icwt')
plt.xlabel('x')
plt.ylabel('time')

```  
